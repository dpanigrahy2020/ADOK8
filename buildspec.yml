version: 0.2

phases:
  install:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 047786125310.dkr.ecr.ap-northeast-1.amazonaws.com
      #- curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/linux/amd64/kubectl
      #- curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      #- curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3.ap-northeast-1.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
      #- echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
      - curl -o kubectl https://amazon-eks.s3.ap-northeast-1.amazonaws.com/2021-01-05/bin/darwin/amd64/kubectl && chmod +x ./kubectl && mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
      - kubectl version --short --client
      #- chmod +x ./kubectl ./aws-iam-authenticator
      #- mv -f ./kubectl /usr/local/bin/kubectl
      #- export PATH=$PWD/:$PATH
      #- ls -l /usr/local/bin/kubectl
      #- uname -a
      #- install -o root -g root -m 0755 ./kubectl /usr/local/bin/kubectl
      #- kubectl version --client
      - ./aws-iam-authenticator help
pre_build:
    commands:
      - REPOSITORY_URI=023756939836.dkr.ecr.ap-northeast-1.amazonaws.com/java
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
    build:
     commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
    post_build:
     commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"java","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json 
artifacts:
    files: imagedefinitions.json
